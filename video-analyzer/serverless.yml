# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: video-analyzer
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.7
  profile: ${file(../config.${self:provider.stage}.json):aws_profile}
  stage: dev
  region: us-west-2

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource: "arn:aws:s3:::${file(../config.${self:provider.stage}.json):videos_bucket}/*"
    - Effect: "Allow"
      Action:
        - "iam:GetRole"
        - "iam:PassRole"
      Resource:
        - Fn::GetAtt: [ RekognitionSNSPublishRole, Arn ]
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
      Resource:
        - Fn::GetAtt: [ VideosTable, Arn ]


# you can define service wide environment variables here
  environment:
    DYNAMODB_TABLE_NAME: ${file(../config.${self:provider.stage}.json):videos_table}
    REKOGNITION_SNS_TOPIC_ARN: ${self:custom.rekognitionSNSTopicArn}
    REKOGNITION_ROLE_ARN: 
      Fn::GetAtt: [ RekognitionSNSPublishRole, Arn ]

custom:
  rekognitionSNSTopicArn:
    Fn::Join: [ ":", [ arn:aws:sns, Ref: AWS::Region, Ref: AWS::AccountId, handle-label-detection-topic ] ]

functions:
  start-processing-video:
    handler: start_processing_video.handler
    events:
      - s3:
          bucket: ${file(../config.${self:provider.stage}.json):videos_bucket}
          event: "s3:ObjectCreated:*"
          rules:
            - suffix: ".mp4"
  handle-label-detection:
    handler: handle_label_detection.handler
    events:
      - sns: handle-label-detection-topic

# you can add CloudFormation resource templates here
resources:
  Resources:
    VideosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          -
            AttributeName: VideoName
            AttributeType: S
        KeySchema:
          -
            AttributeName: VideoName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
        TableName: ${file(../config.${self:provider.stage}.json):videos_table}
    RekognitionSNSPublishRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - rekognition.amazonaws.com
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: RekognitionSNSPublishPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "sns:Publish"
                  Resource: ${self:custom.rekognitionSNSTopicArn}